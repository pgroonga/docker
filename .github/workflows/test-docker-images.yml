name: Test
on:
  schedule:
    - cron: |
        0 0 * * *
concurrency:
  group: test
  cancel-in-progress: true
jobs:
  run:
    name: ${{ matrix.id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        id:
          - "alpine-15"
          - "alpine-14"
          - "alpine-13"
          - "alpine-12"
          - "alpine-11"
          - "alpine-15-slim"
          - "alpine-14-slim"
          - "alpine-13-slim"
          - "alpine-12-slim"
          - "alpine-11-slim"
          - "debian-15"
          - "debian-14"
          - "debian-13"
          - "debian-12"
    env:
      PGPASSWORD: pgroonga
    steps:
      - name: Test Docker images
        run: |
          sudo apt -u -V install \
            curl \
            jq \
            postgresql-client
          latest_version=$(curl https://api.github.com/repos/pgroonga/pgroonga/releases/latest | jq -r .tag_name)
          tags="${latest_version}-${{ matrix.id }}"
          docker_image="groonga/pgroonga:${tags}"
          sudo docker run \
            -p 5432:5432 \
            -e POSTGRES_DB=pgroonga \
            -e POSTGRES_PASSWORD=pgroonga \
            -e POSTGRES_USER=pgroonga \
            -d ${docker_image}
          for i in {1..60}; do
            if pg_isready -h 127.0.0.1; then
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "PostgreSQL not avalable"
          fi
          psql \
            -h 127.0.0.1 \
            -U pgroonga \
            -c "CREATE EXTENSION pgroonga;"
          pgroonga_version=$(psql \
                               -h 127.0.0.1 \
                               -U pgroonga \
                               -t \
                               -A \
                               -c "SELECT extversion FROM pg_catalog.pg_extension WHERE extname = 'pgroonga';")
          set -x
          [ "${latest_version}" == "${pgroonga_version}" ]

